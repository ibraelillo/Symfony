(function(a){if(typeof exports!=="undefined"&&typeof require!=="undefined"){var d=a.jQuery||a.Zepto||a.ender||require("jquery"),c=a._||require("underscore"),e=a.Backbone||require("backbone")}else{var d=a.jQuery,c=a._,e=a.Backbone}var b=(function(){return e.View.extend({hasFocus:false,initialize:function(g){if(!b.templates.form){throw new Error("Templates not loaded")}this.schema=(function(){if(g.schema){return g.schema}var h=g.model;if(!h){throw new Error("Could not find schema")}if(c.isFunction(h.schema)){return h.schema()}return h.schema})();g=c.extend({template:"form",fieldsetTemplate:"fieldset",fieldTemplate:"field"},g);if(!g.fieldsets){var f=g.fields||c.keys(this.schema);g.fieldsets=[{fields:f}]}this.options=g;this.model=g.model;this.data=g.data;this.fields={}},render:function(){var h=this,i=this.options,j=b.templates[i.template];var g=b.helpers.parseHTML(j({fieldsets:'<b class="bbf-tmp"></b>'}));var f=d(".bbf-tmp",g);c.each(i.fieldsets,function(k){f.append(h.renderFieldset(k))});f.children().unwrap();this.setElement(g);if(this.hasFocus){this.trigger("blur",this)}return this},renderFieldset:function(f){var g=this,i=b.templates[this.options.fieldsetTemplate],j=this.schema,k=b.helpers.getNested;if(c.isArray(f)){f={fields:f}}var l=b.helpers.parseHTML(i(c.extend({},f,{legend:'<b class="bbf-tmp-legend"></b>',fields:'<b class="bbf-tmp-fields"></b>'})));if(f.legend){l.find(".bbf-tmp-legend").replaceWith(f.legend)}else{l.find(".bbf-tmp-legend").parent().remove()}var h=d(".bbf-tmp-fields",l);c.each(f.fields,function(m){var n=(function(){if(j[m]){return j[m]}var q=m.replace(/\./g,".subSchema.");return k(j,q)})();if(!n){throw"Field '"+m+"' not found in schema"}var p=g.fields[m]=g.createField(m,n);var o=p.render().el;p.editor.on("all",function(r){var q=c.toArray(arguments);q[0]=m+":"+r;q.splice(1,0,this);this.trigger.apply(this,q)},g);p.editor.on("change",function(){this.trigger("change",g)},g);p.editor.on("focus",function(){if(this.hasFocus){return}this.trigger("focus",this)},g);p.editor.on("blur",function(){if(!this.hasFocus){return}var q=this;setTimeout(function(){if(c.find(q.fields,function(r){return r.editor.hasFocus})){return}q.trigger("blur",q)},0)},g);if(n.type!=="Hidden"){h.append(o)}});h=h.children().unwrap();return l},createField:function(g,h){h.template=h.template||this.options.fieldTemplate;var f={form:this,key:g,schema:h,idPrefix:this.options.idPrefix,template:this.options.fieldTemplate};if(this.model){f.model=this.model}else{if(this.data){f.value=this.data[g]}else{f.value=null}}return new b.Field(f)},validate:function(){var h=this,f=this.fields,i=this.model,k={};c.each(f,function(m){var l=m.validate();if(l){k[m.key]=l}});if(i&&i.validate){var g=i.validate(this.getValue());if(g){var j=c.isObject(g)&&!c.isArray(g);if(!j){k._others=k._others||[];k._others.push(g)}if(j){c.each(g,function(n,l){if(h.fields[l]&&!k[l]){h.fields[l].setError(n);k[l]=n}else{k._others=k._others||[];var m={};m[l]=n;k._others.push(m)}})}}}return c.isEmpty(k)?null:k},commit:function(g){var i=this.validate();if(i){return i}var h;var f=c.extend({error:function(j,k){h=k}},g);this.model.set(this.getValue(),f);if(h){return h}},getValue:function(g){if(g){return this.fields[g].getValue()}var f={};c.each(this.fields,function(h){f[h.key]=h.getValue()});return f},setValue:function(i,h){var g={};if(typeof i==="string"){g[i]=h}else{g=i}var f;for(f in this.schema){if(g[f]!==undefined){this.fields[f].setValue(g[f])}}},focus:function(){if(this.hasFocus){return}var f=this.options.fieldsets[0];if(f){var g;if(c.isArray(f)){g=f[0]}else{g=f.fields[0]}if(g){this.fields[g].editor.focus()}}},blur:function(){if(!this.hasFocus){return}var f=c.find(this.fields,function(g){return g.editor.hasFocus});if(f){f.editor.blur()}},remove:function(){var f=this.fields;for(var g in f){f[g].remove()}e.View.prototype.remove.call(this)},trigger:function(f){if(f==="focus"){this.hasFocus=true}else{if(f==="blur"){this.hasFocus=false}}return e.View.prototype.trigger.apply(this,arguments)}})})();b.helpers=(function(){var f={};f.getNested=function(l,k){var h=k.split(".");var g=l;for(var j=0,m=h.length;j<m;j++){g=g[h[j]]}return g};f.keyToTitle=function(g){g=g.replace(/([A-Z])/g," $1");g=g.replace(/^./,function(h){return h.toUpperCase()});return g};f.compileTemplate=function(i){var g=c.templateSettings.interpolate;c.templateSettings.interpolate=/\{\{(.+?)\}\}/g;var h=c.template(i);c.templateSettings.interpolate=g;return h};f.createTemplate=function(i,g){var h=f.compileTemplate(d.trim(i));if(!g){return h}else{return h(g)}};f.setTemplateCompiler=function(g){f.compileTemplate=g};f.setTemplates=function(g,i){var h=f.createTemplate;b.templates=b.templates||{};b.classNames=b.classNames||{};c.each(g,function(l,k,j){if(c.isString(l)){l=h(l)}b.templates[k]=l});c.extend(b.classNames,i)};f.createEditor=function(g,i){var h;if(c.isString(g)){h=b.editors[g]}else{h=g}return new h(i)};f.getValidator=function(i){var g=b.validators;if(c.isRegExp(i)){return g.regexp({regexp:i})}if(c.isString(i)){if(!g[i]){throw new Error('Validator "'+i+'" not found')}return g[i]()}if(c.isFunction(i)){return i}if(c.isObject(i)&&i.type){var h=i;return g[h.type](h)}throw new Error("Invalid validator: "+i)};f.parseHTML=function(g){if(d.parseHTML!==undefined){return d(d.parseHTML(g))}return d(g)};return f})();b.validators=(function(){var f={};f.errMessages={required:"Required",regexp:"Invalid",email:"Invalid email address",url:"Invalid URL",match:'Must match field "{{field}}"'};f.required=function(g){g=c.extend({type:"required",message:this.errMessages.required},g);return function h(j){g.value=j;var i={type:g.type,message:b.helpers.createTemplate(g.message,g)};if(j===null||j===undefined||j===false||j===""){return i}}};f.regexp=function(g){if(!g.regexp){throw new Error('Missing required "regexp" option for "regexp" validator')}g=c.extend({type:"regexp",message:this.errMessages.regexp},g);return function h(j){g.value=j;var i={type:g.type,message:b.helpers.createTemplate(g.message,g)};if(j===null||j===undefined||j===""){return}if(!g.regexp.test(j)){return i}}};f.email=function(g){g=c.extend({type:"email",message:this.errMessages.email,regexp:/^[\w\-]{1,}([\w\-\+.]{1,1}[\w\-]{1,}){0,}[@][\w\-]{1,}([.]([\w\-]{1,})){1,3}$/},g);return f.regexp(g)};f.url=function(g){g=c.extend({type:"url",message:this.errMessages.url,regexp:/^(http|https):\/\/(([A-Z0-9][A-Z0-9_\-]*)(\.[A-Z0-9][A-Z0-9_\-]*)+)(:(\d+))?\/?/i},g);return f.regexp(g)};f.match=function(h){if(!h.field){throw new Error('Missing required "field" options for "match" validator')}h=c.extend({type:"match",message:this.errMessages.match},h);return function g(k,i){h.value=k;var j={type:h.type,message:b.helpers.createTemplate(h.message,h)};if(k===null||k===undefined||k===""){return}if(k!==i[h.field]){return j}}};return f})();b.Field=(function(){var g=b.helpers,f=b.templates;return e.View.extend({initialize:function(h){h=h||{};this.form=h.form;this.key=h.key;this.value=h.value;this.model=h.model;if(c.isString(h.schema)){h.schema={type:h.schema}}this.schema=c.extend({type:"Text",title:g.keyToTitle(this.key),template:"field"},h.schema)},renderingContext:function(i,h){return{key:this.key,title:i.title,id:h.id,type:i.type,editor:'<b class="bbf-tmp-editor"></b>',help:'<b class="bbf-tmp-help"></b>',error:'<b class="bbf-tmp-error"></b>'}},render:function(){var l=this.schema,i=b.templates;var h={form:this.form,key:this.key,schema:l,idPrefix:this.options.idPrefix,id:this.getId()};if(this.model){h.model=this.model}else{h.value=this.value}var k=this.editor=g.createEditor(l.type,h);var j=b.helpers.parseHTML(i[l.template](this.renderingContext(l,k)));if(l.title===false){j.find('label[for="'+k.id+'"]').first().remove()}j.find(".bbf-tmp-editor").replaceWith(k.render().el);this.$help=d(".bbf-tmp-help",j).parent();this.$help.empty();if(this.schema.help){this.$help.html(this.schema.help)}this.$error=d(d(".bbf-tmp-error",j).parent()[0]);if(this.$error){this.$error.empty()}if(this.schema.fieldClass){j.addClass(this.schema.fieldClass)}if(this.schema.fieldAttrs){j.attr(this.schema.fieldAttrs)}this.setElement(j);return this},getId:function(){var h=this.options.idPrefix,i=this.key;i=i.replace(/\./g,"_");if(c.isString(h)||c.isNumber(h)){return h+i}if(c.isNull(h)){return i}if(this.model){return this.model.cid+"_"+i}return i},validate:function(){var h=this.editor.validate();if(h){this.setError(h.message)}else{this.clearError()}return h},setError:function(i){if(this.editor.hasNestedForm){return}var h=b.classNames.error;this.$el.addClass(h);if(this.$error){this.$error.html(i)}else{if(this.$help){this.$help.html(i)}}},clearError:function(){var i=b.classNames.error;this.$el.removeClass(i);if(this.$error){this.$error.empty()}else{if(this.$help){this.$help.empty();var h=this.schema.help;if(h){this.$help.html(h)}}}},commit:function(){return this.editor.commit()},getValue:function(){return this.editor.getValue()},setValue:function(h){this.editor.setValue(h)},focus:function(){this.editor.focus()},blur:function(){this.editor.blur()},remove:function(){this.editor.remove();e.View.prototype.remove.call(this)}})})();b.editors=(function(){var g=b.helpers;var f={};f.Base=e.View.extend({defaultValue:null,hasFocus:false,initialize:function(h){var h=h||{};if(h.model){if(!h.key){throw"Missing option: 'key'"}this.model=h.model;this.value=this.model.get(h.key)}else{if(h.value){this.value=h.value}}if(this.value===undefined){this.value=this.defaultValue}this.key=h.key;this.form=h.form;this.schema=h.schema||{};this.validators=h.validators||this.schema.validators;this.$el.attr("name",this.getName());if(this.schema.editorClass){this.$el.addClass(this.schema.editorClass)}if(this.schema.editorAttrs){this.$el.attr(this.schema.editorAttrs)}},getValue:function(){throw"Not implemented. Extend and override this method."},setValue:function(){throw"Not implemented. Extend and override this method."},focus:function(){throw"Not implemented. Extend and override this method."},blur:function(){throw"Not implemented. Extend and override this method."},getName:function(){var h=this.key||"";return h.replace(/\./g,"_")},commit:function(i){var h=this.validate();if(h){return h}this.listenTo(this.model,"invalid",function(j,k){h=k});this.model.set(this.key,this.getValue(),i);if(h){return h}},validate:function(){var k=this.$el,j=null,l=this.getValue(),m=this.form?this.form.getValue():{},i=this.validators,h=b.helpers.getValidator;if(i){c.every(i,function(n){j=h(n)(l,m);return j?false:true})}return j},trigger:function(h){if(h==="focus"){this.hasFocus=true}else{if(h==="blur"){this.hasFocus=false}}return e.View.prototype.trigger.apply(this,arguments)}});f.Text=f.Base.extend({tagName:"input",defaultValue:"",previousValue:"",events:{keyup:"determineChange",keypress:function(i){var h=this;setTimeout(function(){h.determineChange()},0)},select:function(h){this.trigger("select",this)},focus:function(h){this.trigger("focus",this)},blur:function(h){this.trigger("blur",this)}},initialize:function(h){f.Base.prototype.initialize.call(this,h);var j=this.schema;var i="text";if(j&&j.editorAttrs&&j.editorAttrs.type){i=j.editorAttrs.type}if(j&&j.dataType){i=j.dataType}this.$el.attr("type",i)},render:function(){this.setValue(this.value);return this},determineChange:function(i){var h=this.$el.val();var j=(h!==this.previousValue);if(j){this.previousValue=h;this.trigger("change",this)}},getValue:function(){return this.$el.val()},setValue:function(h){this.$el.val(h)},focus:function(){if(this.hasFocus){return}this.$el.focus()},blur:function(){if(!this.hasFocus){return}this.$el.blur()},select:function(){this.$el.select()}});f.Number=f.Text.extend({defaultValue:0,events:c.extend({},f.Text.prototype.events,{keypress:"onKeyPress"}),initialize:function(h){f.Text.prototype.initialize.call(this,h);this.$el.attr("type","number");this.$el.attr("step","any")},onKeyPress:function(k){var h=this,l=function(){setTimeout(function(){h.determineChange()},0)};if(k.charCode===0){l();return}var i=this.$el.val()+String.fromCharCode(k.charCode);var j=/^[0-9]*\.?[0-9]*?$/.test(i);if(j){l()}else{k.preventDefault()}},getValue:function(){var h=this.$el.val();return h===""?null:parseFloat(h,10)},setValue:function(h){h=(function(){if(c.isNumber(h)){return h}if(c.isString(h)&&h!==""){return parseFloat(h,10)}return null})();if(c.isNaN(h)){h=null}f.Text.prototype.setValue.call(this,h)}});f.Password=f.Text.extend({initialize:function(h){f.Text.prototype.initialize.call(this,h);this.$el.attr("type","password")}});f.TextArea=f.Text.extend({tagName:"textarea"});f.Checkbox=f.Base.extend({defaultValue:false,tagName:"input",events:{click:function(h){this.trigger("change",this)},focus:function(h){this.trigger("focus",this)},blur:function(h){this.trigger("blur",this)}},initialize:function(h){f.Base.prototype.initialize.call(this,h);this.$el.attr("type","checkbox")},render:function(){this.setValue(this.value);return this},getValue:function(){return this.$el.prop("checked")},setValue:function(h){if(h){this.$el.prop("checked",true)}},focus:function(){if(this.hasFocus){return}this.$el.focus()},blur:function(){if(!this.hasFocus){return}this.$el.blur()}});f.Hidden=f.Base.extend({defaultValue:"",initialize:function(h){f.Text.prototype.initialize.call(this,h);this.$el.attr("type","hidden")},getValue:function(){return this.value},setValue:function(h){this.value=h},focus:function(){},blur:function(){}});f.Select=f.Base.extend({tagName:"select",events:{change:function(h){this.trigger("change",this)},focus:function(h){this.trigger("focus",this)},blur:function(h){this.trigger("blur",this)}},initialize:function(h){f.Base.prototype.initialize.call(this,h);if(!this.schema||!this.schema.options){throw"Missing required 'schema.options'"}},render:function(){this.setOptions(this.schema.options);return this},setOptions:function(i){var h=this;if(i instanceof e.Collection){var j=i;if(j.length>0){this.renderOptions(i)}else{j.fetch({success:function(k){h.renderOptions(i)}})}}else{if(c.isFunction(i)){i(function(k){h.renderOptions(k)},h)}else{this.renderOptions(i)}}},renderOptions:function(i){var h=this.$el,j;j=this._getOptionsHtml(i);h.html(j);this.setValue(this.value)},_getOptionsHtml:function(h){var i;if(c.isString(h)){i=h}else{if(c.isArray(h)){i=this._arrayToHtml(h)}else{if(h instanceof e.Collection){i=this._collectionToHtml(h)}else{if(c.isFunction(h)){var j;h(function(k){j=k},this);i=this._getOptionsHtml(j)}}}}return i},getValue:function(){return this.$el.val()},setValue:function(h){this.$el.val(h)},focus:function(){if(this.hasFocus){return}this.$el.focus()},blur:function(){if(!this.hasFocus){return}this.$el.blur()},_collectionToHtml:function(i){var j=[];i.each(function(k){j.push({val:k.id,label:k.toString()})});var h=this._arrayToHtml(j);return h},_arrayToHtml:function(i){var h=[];c.each(i,function(j){if(c.isObject(j)){if(j.group){h.push('<optgroup label="'+j.group+'">');h.push(this._getOptionsHtml(j.options));h.push("</optgroup>")}else{var k=(j.val||j.val===0)?j.val:"";h.push('<option value="'+k+'">'+j.label+"</option>")}}else{h.push("<option>"+j+"</option>")}},this);return h.join("")}});f.Radio=f.Select.extend({tagName:"ul",className:"bbf-radio",events:{"change input[type=radio]":function(){this.trigger("change",this)},"focus input[type=radio]":function(){if(this.hasFocus){return}this.trigger("focus",this)},"blur input[type=radio]":function(){if(!this.hasFocus){return}var h=this;setTimeout(function(){if(h.$("input[type=radio]:focus")[0]){return}h.trigger("blur",h)},0)}},getValue:function(){return this.$("input[type=radio]:checked").val()},setValue:function(h){this.$("input[type=radio]").val([h])},focus:function(){if(this.hasFocus){return}var h=this.$("input[type=radio]:checked");if(h[0]){h.focus();return}this.$("input[type=radio]").first().focus()},blur:function(){if(!this.hasFocus){return}this.$("input[type=radio]:focus").blur()},_arrayToHtml:function(j){var i=[];var h=this;c.each(j,function(l,k){var m="<li>";if(c.isObject(l)){var n=(l.val||l.val===0)?l.val:"";m+=('<input type="radio" name="'+h.id+'" value="'+n+'" id="'+h.id+"-"+k+'" />');m+=('<label for="'+h.id+"-"+k+'">'+l.label+"</label>")}else{m+=('<input type="radio" name="'+h.id+'" value="'+l+'" id="'+h.id+"-"+k+'" />');m+=('<label for="'+h.id+"-"+k+'">'+l+"</label>")}m+="</li>";i.push(m)});return i.join("")}});f.Checkboxes=f.Select.extend({tagName:"ul",className:"bbf-checkboxes",events:{"click input[type=checkbox]":function(){this.trigger("change",this)},"focus input[type=checkbox]":function(){if(this.hasFocus){return}this.trigger("focus",this)},"blur input[type=checkbox]":function(){if(!this.hasFocus){return}var h=this;setTimeout(function(){if(h.$("input[type=checkbox]:focus")[0]){return}h.trigger("blur",h)},0)}},getValue:function(){var h=[];this.$("input[type=checkbox]:checked").each(function(){h.push(d(this).val())});return h},setValue:function(h){if(!c.isArray(h)){h=[h]}this.$("input[type=checkbox]").val(h)},focus:function(){if(this.hasFocus){return}this.$("input[type=checkbox]").first().focus()},blur:function(){if(!this.hasFocus){return}this.$("input[type=checkbox]:focus").blur()},_arrayToHtml:function(j){var i=[];var h=this;c.each(j,function(l,k){var m="<li>";if(c.isObject(l)){var n=(l.val||l.val===0)?l.val:"";m+=('<input type="checkbox" name="'+h.id+'" value="'+n+'" id="'+h.id+"-"+k+'" />');m+=('<label for="'+h.id+"-"+k+'">'+l.label+"</label>")}else{m+=('<input type="checkbox" name="'+h.id+'" value="'+l+'" id="'+h.id+"-"+k+'" />');m+=('<label for="'+h.id+"-"+k+'">'+l+"</label>")}m+="</li>";i.push(m)});return i.join("")}});f.Object=f.Base.extend({hasNestedForm:true,className:"bbf-object",initialize:function(h){this.value={};f.Base.prototype.initialize.call(this,h);if(!this.schema.subSchema){throw new Error("Missing required 'schema.subSchema' option for Object editor")}},render:function(){this.form=new b({schema:this.schema.subSchema,data:this.value,idPrefix:this.id+"_",fieldTemplate:"nestedField"});this._observeFormEvents();this.$el.html(this.form.render().el);if(this.hasFocus){this.trigger("blur",this)}return this},getValue:function(){if(this.form){return this.form.getValue()}return this.value},setValue:function(h){this.value=h;this.render()},focus:function(){if(this.hasFocus){return}this.form.focus()},blur:function(){if(!this.hasFocus){return}this.form.blur()},remove:function(){this.form.remove();e.View.prototype.remove.call(this)},validate:function(){return this.form.validate()},_observeFormEvents:function(){this.form.on("all",function(){var h=c.toArray(arguments);h[1]=this;this.trigger.apply(this,h)},this)}});f.NestedModel=f.Object.extend({initialize:function(h){f.Base.prototype.initialize.call(this,h);if(!h.schema.model){throw'Missing required "schema.model" option for NestedModel editor'}},render:function(){var k=this.value||{},i=this.key,j=this.schema.model;var h=(k.constructor===j)?k:new j(k);this.form=new b({model:h,idPrefix:this.id+"_",fieldTemplate:"nestedField"});this._observeFormEvents();this.$el.html(this.form.render().el);if(this.hasFocus){this.trigger("blur",this)}return this},commit:function(){var h=this.form.commit();if(h){this.$el.addClass("error");return h}return f.Object.prototype.commit.call(this)}});f.Date=f.Base.extend({events:{"change select":function(){this.updateHidden();this.trigger("change",this)},"focus select":function(){if(this.hasFocus){return}this.trigger("focus",this)},"blur select":function(){if(!this.hasFocus){return}var h=this;setTimeout(function(){if(h.$("select:focus")[0]){return}h.trigger("blur",h)},0)}},initialize:function(j){j=j||{};f.Base.prototype.initialize.call(this,j);var k=f.Date,h=new Date();this.options=c.extend({monthNames:k.monthNames,showMonthNames:k.showMonthNames},j);this.schema=c.extend({yearStart:h.getFullYear()-100,yearEnd:h.getFullYear()},j.schema||{});if(this.value&&!c.isDate(this.value)){this.value=new Date(this.value)}if(!this.value){var i=new Date();i.setSeconds(0);i.setMilliseconds(0);this.value=i}},render:function(){var j=this.options,m=this.schema;var i=c.map(c.range(1,32),function(o){return'<option value="'+o+'">'+o+"</option>"});var n=c.map(c.range(0,12),function(p){var o=j.showMonthNames?j.monthNames[p]:(p+1);return'<option value="'+p+'">'+o+"</option>"});var l=m.yearStart<m.yearEnd?c.range(m.yearStart,m.yearEnd+1):c.range(m.yearStart,m.yearEnd-1,-1);var h=c.map(l,function(o){return'<option value="'+o+'">'+o+"</option>"});var k=b.helpers.parseHTML(b.templates.date({dates:i.join(""),months:n.join(""),years:h.join("")}));this.$date=k.find('select[data-type="date"]');this.$month=k.find('select[data-type="month"]');this.$year=k.find('select[data-type="year"]');this.$hidden=d('<input type="hidden" name="'+this.key+'" />');k.append(this.$hidden);this.setValue(this.value);this.setElement(k);this.$el.attr("id",this.id);if(this.hasFocus){this.trigger("blur",this)}return this},getValue:function(){var i=this.$year.val(),j=this.$month.val(),h=this.$date.val();if(!i||!j||!h){return null}return new Date(i,j,h)},setValue:function(h){this.$date.val(h.getDate());this.$month.val(h.getMonth());this.$year.val(h.getFullYear());this.updateHidden()},focus:function(){if(this.hasFocus){return}this.$("select").first().focus()},blur:function(){if(!this.hasFocus){return}this.$("select:focus").blur()},updateHidden:function(){var h=this.getValue();if(c.isDate(h)){h=h.toISOString()}this.$hidden.val(h)}},{showMonthNames:true,monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"]});f.DateTime=f.Base.extend({events:{"change select":function(){this.updateHidden();this.trigger("change",this)},"focus select":function(){if(this.hasFocus){return}this.trigger("focus",this)},"blur select":function(){if(!this.hasFocus){return}var h=this;setTimeout(function(){if(h.$("select:focus")[0]){return}h.trigger("blur",h)},0)}},initialize:function(h){h=h||{};f.Base.prototype.initialize.call(this,h);this.options=c.extend({DateEditor:f.DateTime.DateEditor},h);this.schema=c.extend({minsInterval:15},h.schema||{});this.dateEditor=new this.options.DateEditor(h);this.value=this.dateEditor.value},render:function(){function l(m){return m<10?"0"+m:m}var k=this.schema;var i=c.map(c.range(0,24),function(m){return'<option value="'+m+'">'+l(m)+"</option>"});var h=c.map(c.range(0,60,k.minsInterval),function(m){return'<option value="'+m+'">'+l(m)+"</option>"});var j=b.helpers.parseHTML(b.templates.dateTime({date:'<b class="bbf-tmp"></b>',hours:i.join(),mins:h.join()}));j.find(".bbf-tmp").replaceWith(this.dateEditor.render().el);this.$hour=j.find('select[data-type="hour"]');this.$min=j.find('select[data-type="min"]');this.$hidden=j.find('input[type="hidden"]');this.setValue(this.value);this.setElement(j);this.$el.attr("id",this.id);if(this.hasFocus){this.trigger("blur",this)}return this},getValue:function(){var i=this.dateEditor.getValue();var h=this.$hour.val(),j=this.$min.val();if(!i||!h||!j){return null}i.setHours(h);i.setMinutes(j);return i},setValue:function(h){if(!c.isDate(h)){h=new Date(h)}this.dateEditor.setValue(h);this.$hour.val(h.getHours());this.$min.val(h.getMinutes());this.updateHidden()},focus:function(){if(this.hasFocus){return}this.$("select").first().focus()},blur:function(){if(!this.hasFocus){return}this.$("select:focus").blur()},updateHidden:function(){var h=this.getValue();if(c.isDate(h)){h=h.toISOString()}this.$hidden.val(h)},remove:function(){this.dateEditor.remove();f.Base.prototype.remove.call(this)}},{DateEditor:f.Date});return f})();b.setTemplates=b.helpers.setTemplates;b.setTemplateCompiler=b.helpers.setTemplateCompiler;b.templates={};b.setTemplates({form:'      <form class="bbf-form">{{fieldsets}}</form>    ',fieldset:"      <fieldset>        <legend>{{legend}}</legend>        <ul>{{fields}}</ul>      </fieldset>    ",field:'      <li class="bbf-field field-{{key}}">        <label for="{{id}}">{{title}}</label>        <div class="bbf-editor">{{editor}}</div>        <div class="bbf-help">{{help}}</div>        <div class="bbf-error">{{error}}</div>      </li>    ',nestedField:'      <li class="bbf-field bbf-nested-field field-{{key}}" title="{{title}}">        <label for="{{id}}">{{title}}</label>        <div class="bbf-editor">{{editor}}</div>        <div class="bbf-help">{{help}}</div>        <div class="bbf-error">{{error}}</div>      </li>    ',list:'      <div class="bbf-list">        <ul>{{items}}</ul>        <div class="bbf-actions"><button type="button" data-action="add">Add</div>      </div>    ',listItem:'      <li>        <button type="button" data-action="remove" class="bbf-remove">&times;</button>        <div class="bbf-editor-container">{{editor}}</div>      </li>    ',date:'      <div class="bbf-date">        <select data-type="date" class="bbf-date">{{dates}}</select>        <select data-type="month" class="bbf-month">{{months}}</select>        <select data-type="year" class="bbf-year">{{years}}</select>      </div>    ',dateTime:'      <div class="bbf-datetime">        <div class="bbf-date-container">{{date}}</div>        <select data-type="hour">{{hours}}</select>        :        <select data-type="min">{{mins}}</select>      </div>    ',"list.Modal":'      <div class="bbf-list-modal">        {{summary}}      </div>    '},{error:"bbf-error"});b.VERSION="0.11.0";e.Form=b})(this);